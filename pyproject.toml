[build-system]
requires = ["setuptools>=64.0.0", "versioningit"]
build-backend = "setuptools.build_meta"

[project]
name = "caf.base"
dynamic = ["version", "dependencies", "optional-dependencies"]
description = "Collection of core classes and definitions used in the Common Analytical Framework."
readme = "README.md"
license = { "file" = "LICENSE" }
requires-python = ">=3.11"
authors = [{ name = "Transport for the North" }]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

[project.urls]
"Bug Tracker" = "https://github.com/transport-for-the-north/caf.base/issues"
Homepage = "https://github.com/transport-for-the-north/caf.base"
Source = "https://github.com/transport-for-the-north/caf.base"

[tool.setuptools.dynamic]
dependencies = { "file" = "requirements.txt" }

[tool.setuptools.dynamic.optional-dependencies]
dev = { "file" = "requirements_dev.txt" }
docs = { "file" = "docs/requirements.txt" }

# Dynamic versioning for editable installs
[tool.setuptools.cmdclass]
build_py = "versioningit.cmdclass.build_py"
sdist = "versioningit.cmdclass.sdist"

# Packaging options
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"caf.base" = ["py.typed", "seg_translations/*.csv", "segments/*.yml"]

# Linters
[tool.black]
line-length = 95
target-version = ['py311']

[tool.pylint.messages_control]
disable = [
    "line-too-long",    # Compatibility with black
    "too-many-lines",
    "use-dict-literal",
    "use-list-literal",
    "wrong-import-order",  # Handled by isort
]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

skip = ["__init__.py", "_version.py"]
skip_glob = [".*"]

# Section commenting
import_heading_stdlib = "Built-Ins"
import_heading_thirdparty = "Third Party"
import_heading_firstparty = "Local Imports"

# Pylint settings
[tool.pylint.basic]
good-names = ["df", "fn", "ca", "tp", "x", "x1", "x2", "i",]

[tool.pylint.main]
ignore = ["__init__.py", "_version.py"]

[tool.pylint.design]
max-args = 10
max-attributes = 15
max-statements = 100

[tool.mypy]
packages = ["caf.base"]
namespace_packages = true
ignore_missing_imports = true
allow_redefinition = true

[tool.pydocstyle]
convention = "numpy"
match = '(?!_test)(?!test_)(?!__init__).*\.py'
add-ignore = [
    "D202", # Temporary compatibility with black
]

[tool.pytest.ini_options]
addopts = "--cov=caf.base --cov-report=xml --doctest-modules -n auto"
doctest_optionflags = "NORMALIZE_WHITESPACE"
pythonpath = "src"
# Test coverage fails with src before tests
testpaths = ["tests", "src"]

[tool.coverage.run]
include_namespace_packages = true
omit = ["*/_version.py"]

# Versioning
[tool.versioningit.vcs]
method = "git"
match = ["v*"]
default-tag = "0.0.1"

[tool.versioningit.onbuild]
source-file = "src/caf/base/_version.py"
build-file = "caf/base/_version.py"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
